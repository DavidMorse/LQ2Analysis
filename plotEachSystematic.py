
from matplotlib import pyplot as plt 
import numpy as np
import os

masses = ["300","400","500","600","700","800","900","1000","1100","1200","1300","1400","1500","1600","1700","1800","1900","2000","2100","2200","2300","2400","2500","2600","2700","2800","2900","3000"]
sigSys_2016 = dict(zip(masses,[2.54,2.53,2.64,2.81,3.02,3.33,3.74,4.27,5.03,5.81,6.99,8.34,9.76,11.67,13.95,15.94,18.6,21.15,24.03,27.08,29.37,32.27,35.02,37.77,40.32,42.96,45.62,47.95]))
bkgSys_2016 = dict(zip(masses,[3.63,3.62,3.74,4.46,5.37,6.4,7.37,8.59,10.14,11.5,11.93,12.33,14.15,15.03,14.69,16.56,19.18,20.82,26.33,26.15,28.75,38.14,41.09,43.29,46.36,47.1,51.06,54.72]))
sigSys_2017 = dict(zip(masses,[4.04,3.54,3.46,3.49,3.56,3.64,3.77,3.91,4.09,4.3,4.58,4.93,5.33,5.79,6.29,6.97,7.58,8.31,9.0,9.77,10.44,11.16,11.91,12.68,13.41,14.03,14.78,15.37]))
bkgSys_2017 = dict(zip(masses,[4.94,4.97,5.2,5.6,6.11,7.21,8.72,10.15,11.33,12.76,14.17,14.18,14.91,17.39,17.26,20.45,20.77,24.17,33.73,30.81,34.52,43.58,44.52,45.03,45.95,46.58,49.63,54.31]))
sigSys_2018 = dict(zip(masses,[3.07,2.88,2.92,3.07,3.27,3.55,3.88,4.29,4.71,5.27,5.84,6.46,7.08,7.8,8.64,9.36,10.12,10.9,11.79,12.54,13.29,14.0,14.77,15.48,16.19,16.86,17.56,18.25]))
bkgSys_2018 = dict(zip(masses,[4.15,4.18,4.36,4.72,5.33,6.46,7.89,9.63,10.77,11.95,13.55,14.56,16.3,17.61,18.76,20.42,23.24,24.9,29.29,31.32,33.4,41.53,43.87,44.73,53.01,59.58,50.93,52.4]))

# JER
bkgSys_2016_JER = dict(zip(masses,[0.3,0.25,0.27,0.47,0.51,1.57,0.54,0.44,0.82,1.7,0.63,1.48,2.07,1.69,1.51,2.67,1.38,2.42,3.59,0.79,0.57,7.24,2.52,3.38,9.39,2.18,0.71,4.57]))
bkgSys_2017_JER = dict(zip(masses,[0.57,0.54,0.38,0.4,0.31,0.46,0.72,0.58,0.9,1.27,2.3,1.29,1.54,3.48,3.62,3.85,3.76,4.9,11.68,8.34,11.76,8.83,11.04,13.04,6.17,4.74,4.28,13.2]))
bkgSys_2018_JER = dict(zip(masses,[0.44,0.44,0.35,0.17,0.27,0.26,0.78,1.39,0.63,0.73,0.9,1.16,1.65,1.95,1.52,3.11,3.48,4.12,6.54,7.25,7.78,4.64,4.57,5.58,14.55,20.66,3.67,2.31]))
# JES
bkgSys_2016_JES = dict(zip(masses,[0.74,0.66,0.71,0.68,0.58,0.74,0.77,1.13,1.66,2.86,2.23,2.57,3.41,1.27,1.13,4.93,5.25,2.74,10.79,3.83,3.19,3.61,5.41,4.44,10.17,4.21,1.72,4.04]))
bkgSys_2017_JES = dict(zip(masses,[0.94,0.94,0.73,0.67,0.56,0.85,0.89,0.92,0.94,1.97,3.16,1.49,2.17,4.75,3.72,4.29,2.52,2.86,10.27,6.57,6.58,4.74,10.4,3.5,5.24,3.12,6.61,11.85]))
bkgSys_2018_JES = dict(zip(masses,[1.19,1.23,1.04,0.83,0.7,0.78,1.32,1.81,1.88,2.06,2.25,2.62,3.43,2.99,4.64,5.91,8.26,6.84,12.04,6.71,11.65,10.65,8.62,8.3,14.06,21.25,3.59,2.63]))
# MUONISO
bkgSys_2016_MUONISO = dict(zip(masses,[0.03,0.03,0.03,0.03,0.04,0.04,0.05,0.06,0.07,0.07,0.07,0.08,0.08,0.09,0.1,0.11,0.12,0.12,0.14,0.11,0.1,0.12,0.1,0.1,0.11,0.13,0.13,0.13]))
bkgSys_2017_MUONISO = dict(zip(masses,[0.03,0.03,0.03,0.04,0.04,0.05,0.05,0.06,0.06,0.07,0.08,0.08,0.09,0.1,0.09,0.1,0.09,0.1,0.11,0.1,0.11,0.11,0.14,0.15,0.14,0.13,0.13,0.13]))
bkgSys_2018_MUONISO = dict(zip(masses,[0.05,0.05,0.05,0.05,0.05,0.06,0.06,0.06,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.07,0.08,0.08,0.08,0.07,0.07,0.07,0.07,0.07,0.06,0.06,0.07]))
# BTAG
bkgSys_2016_BTAG = dict(zip(masses,[0.3,0.3,0.31,0.3,0.49,0.62,0.78,1.0,1.37,1.57,1.88,2.25,2.44,2.77,3.1,3.19,3.51,3.48,3.6,4.08,4.14,4.04,4.61,5.42,5.35,5.03,5.25,5.93]))
bkgSys_2017_BTAG = dict(zip(masses,[0.42,0.42,0.39,0.44,0.66,0.92,1.19,1.49,1.77,2.03,2.44,2.61,2.89,3.18,3.2,3.3,3.46,3.66,3.88,3.86,4.0,4.48,4.48,4.89,5.13,4.73,5.16,4.93]))
bkgSys_2018_BTAG = dict(zip(masses,[0.38,0.38,0.37,0.37,0.51,0.74,0.98,1.26,1.58,1.8,2.11,2.59,2.75,2.94,3.68,4.17,4.28,5.32,5.74,6.4,6.82,7.95,7.71,8.28,7.95,9.71,9.46,10.03]))
# PU
bkgSys_2016_PU = dict(zip(masses,[0.35,0.36,0.4,0.53,0.58,0.52,0.5,0.8,1.17,1.11,1.72,2.05,2.26,2.42,2.45,2.79,3.28,4.4,5.41,6.54,7.76,8.31,11.22,12.52,11.89,15.39,15.31,15.97]))
bkgSys_2017_PU = dict(zip(masses,[0.15,0.15,0.13,0.18,0.2,0.35,0.43,0.5,0.71,1.04,1.28,1.3,1.7,1.44,2.61,1.62,1.33,1.16,1.65,3.45,3.84,1.64,2.1,2.99,5.55,5.53,5.6,5.57]))
bkgSys_2018_PU = dict(zip(masses,[0.13,0.13,0.17,0.26,0.19,0.31,0.3,0.34,0.37,0.69,0.67,1.08,0.53,1.5,2.14,1.6,1.37,1.73,2.72,1.43,2.46,3.86,3.71,5.76,8.46,5.88,5.59,5.79]))
# SHAPEVV
bkgSys_2016_SHAPEVV = dict(zip(masses,[0.04,0.04,0.04,0.04,0.05,0.04,0.05,0.09,0.15,0.17,0.17,0.21,0.18,0.17,0.25,0.27,0.31,0.49,0.48,0.7,0.76,0.57,0.68,1.12,1.37,2.38,2.68,3.99]))
bkgSys_2017_SHAPEVV = dict(zip(masses,[0.02,0.02,0.02,0.04,0.04,0.04,0.06,0.08,0.11,0.17,0.25,0.35,0.45,0.54,0.25,0.66,0.83,0.98,1.12,0.38,0.58,0.48,0.42,0.83,0.61,0.68,0.78,2.45]))
bkgSys_2018_SHAPEVV = dict(zip(masses,[0.09,0.09,0.09,0.1,0.12,0.19,0.21,0.26,0.28,0.23,0.21,0.22,0.26,0.31,0.74,0.92,0.73,1.22,1.97,0.81,0.86,1.64,1.98,2.98,0.92,0.44,0.32,0.34]))
# LUMI
bkgSys_2016_LUMI = dict(zip(masses,[0.13,0.13,0.14,0.15,0.16,0.18,0.2,0.21,0.24,0.25,0.26,0.29,0.31,0.31,0.34,0.36,0.39,0.38,0.44,0.33,0.29,0.34,0.27,0.29,0.28,0.25,0.26,0.16]))
bkgSys_2017_LUMI = dict(zip(masses,[0.27,0.27,0.27,0.29,0.31,0.34,0.37,0.41,0.44,0.48,0.51,0.54,0.59,0.6,0.62,0.65,0.56,0.59,0.65,0.69,0.7,0.75,0.91,0.91,0.79,0.72,0.63,0.74]))
bkgSys_2018_LUMI = dict(zip(masses,[0.33,0.34,0.34,0.36,0.39,0.41,0.44,0.46,0.46,0.48,0.51,0.52,0.53,0.54,0.55,0.52,0.55,0.57,0.6,0.65,0.56,0.56,0.42,0.26,0.32,0.37,0.38,0.4]))
# PREFIRE
bkgSys_2016_PREFIRE = dict(zip(masses,[0.19,0.19,0.24,0.33,0.46,0.63,0.79,0.94,1.13,1.19,1.26,1.41,1.48,1.36,1.19,1.24,1.12,1.03,0.98,1.17,1.24,1.18,1.24,1.67,1.69,2.26,2.5,3.76]))
bkgSys_2017_PREFIRE = dict(zip(masses,[0.14,0.15,0.19,0.29,0.41,0.56,0.71,0.83,0.95,1.05,1.22,1.34,1.5,1.49,1.54,1.57,1.57,1.64,1.8,1.84,1.63,1.61,1.92,1.75,2.18,2.08,2.3,2.04]))
bkgSys_2018_PREFIRE = dict(zip(masses,[0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.04,0.05,0.04,0.03,0.04,0.05,0.06,0.06,0.04,0.04,0.04]))
# MUONID
bkgSys_2016_MUONID = dict(zip(masses,[0.12,0.12,0.12,0.13,0.15,0.17,0.2,0.23,0.27,0.28,0.27,0.32,0.34,0.35,0.4,0.4,0.44,0.46,0.55,0.42,0.38,0.49,0.33,0.35,0.29,0.19,0.21,0.07]))
bkgSys_2017_MUONID = dict(zip(masses,[0.13,0.13,0.13,0.12,0.12,0.11,0.11,0.12,0.15,0.18,0.21,0.23,0.25,0.25,0.21,0.25,0.22,0.28,0.31,0.23,0.25,0.29,0.37,0.38,0.33,0.3,0.28,0.27]))
bkgSys_2018_MUONID = dict(zip(masses,[0.07,0.07,0.07,0.08,0.09,0.1,0.11,0.11,0.11,0.12,0.11,0.11,0.11,0.12,0.13,0.13,0.14,0.15,0.16,0.15,0.15,0.15,0.12,0.1,0.14,0.11,0.12,0.12]))
# MUONHLT
bkgSys_2016_MUONHLT = dict(zip(masses,[0.01,0.01,0.02,0.02,0.02,0.03,0.03,0.03,0.04,0.04,0.04,0.05,0.05,0.06,0.07,0.07,0.08,0.09,0.1,0.11,0.1,0.11,0.13,0.18,0.18,0.25,0.26,0.39]))
bkgSys_2017_MUONHLT = dict(zip(masses,[0.02,0.02,0.02,0.02,0.02,0.02,0.03,0.03,0.04,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.12,0.13,0.13,0.16,0.18,0.2,0.22,0.26,0.27,0.26,0.29,0.27]))
bkgSys_2018_MUONHLT = dict(zip(masses,[0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.04,0.04,0.04,0.04,0.04,0.04,0.05,0.05,0.06,0.06,0.07,0.06,0.05,0.07,0.07,0.07,0.08,0.06,0.06,0.06]))
# SHAPETT
bkgSys_2016_SHAPETT = dict(zip(masses,[1.58,1.58,1.6,2.57,3.55,4.59,5.78,6.87,8.15,9.2,9.7,9.4,10.96,12.03,11.31,9.92,10.7,9.68,10.08,11.2,11.58,8.08,7.37,9.93,7.97,6.22,6.85,0.05]))
bkgSys_2017_SHAPETT = dict(zip(masses,[1.74,1.74,1.8,1.81,1.93,3.27,4.99,6.35,7.58,8.76,9.43,9.6,9.89,10.11,10.35,10.16,10.85,11.04,10.07,11.2,12.3,12.76,11.4,11.6,14.13,13.76,13.06,12.47]))
bkgSys_2018_SHAPETT = dict(zip(masses,[1.66,1.67,1.72,1.64,1.84,3.16,4.6,6.38,7.46,8.48,9.65,10.44,11.89,12.51,13.01,12.65,13.1,12.37,12.99,13.98,13.2,11.46,13.4,14.34,17.9,15.02,15.21,15.11]))
# TTNORM
bkgSys_2016_TTNORM = dict(zip(masses,[1.31,1.31,1.3,1.27,1.25,1.21,1.19,1.15,1.13,1.05,1.02,0.95,0.91,0.89,0.81,0.76,0.69,0.65,0.59,0.69,0.73,0.67,0.68,0.59,0.53,0.26,0.29,0.07]))
bkgSys_2017_TTNORM = dict(zip(masses,[1.06,1.06,1.05,1.03,1.01,0.98,0.95,0.91,0.88,0.84,0.81,0.76,0.72,0.68,0.66,0.62,0.62,0.57,0.49,0.54,0.52,0.5,0.46,0.44,0.46,0.46,0.45,0.44]))
bkgSys_2018_TTNORM = dict(zip(masses,[0.92,0.92,0.91,0.89,0.87,0.84,0.82,0.79,0.77,0.75,0.74,0.7,0.7,0.7,0.68,0.66,0.66,0.62,0.62,0.62,0.56,0.51,0.52,0.54,0.58,0.48,0.47,0.42]))
# ZNORM
bkgSys_2016_ZNORM = dict(zip(masses,[0.55,0.55,0.56,0.68,0.71,0.76,0.72,0.82,0.62,1.28,1.46,1.83,2.02,2.16,2.54,2.84,3.21,3.61,3.42,4.01,4.03,4.33,5.23,6.12,6.47,9.11,8.2,10.94]))
bkgSys_2017_ZNORM = dict(zip(masses,[0.31,0.31,0.34,0.41,0.51,0.65,0.74,0.85,1.02,1.07,1.09,1.42,1.51,1.71,2.15,2.3,2.8,3.26,3.93,3.25,3.28,3.02,2.28,2.31,2.74,3.3,3.86,3.52]))
bkgSys_2018_ZNORM = dict(zip(masses,[0.33,0.33,0.36,0.45,0.54,0.64,0.82,1.03,1.32,1.49,1.48,1.82,1.81,1.42,1.36,1.72,1.55,1.88,1.25,1.41,2.74,2.91,3.36,3.28,2.91,5.69,5.78,6.31]))
# MES
bkgSys_2016_MES = dict(zip(masses,[0.81,0.8,0.83,0.95,1.27,0.77,0.82,1.21,1.48,1.26,1.5,1.73,2.1,3.04,3.08,7.53,10.99,14.61,16.72,20.34,22.07,33.96,36.53,36.74,39.49,39.89,44.48,45.84]))
bkgSys_2017_MES = dict(zip(masses,[2.85,2.89,3.02,3.09,3.01,3.03,3.27,3.62,3.32,3.35,4.0,3.39,3.68,6.69,5.29,11.42,11.98,16.44,21.49,22.53,25.7,37.81,37.61,38.5,39.77,41.56,44.71,46.8]))
bkgSys_2018_MES = dict(zip(masses,[0.76,0.78,0.81,0.72,0.74,0.82,1.12,1.08,1.3,1.25,2.87,2.19,2.92,3.6,4.21,7.93,11.3,14.85,17.18,21.65,22.48,34.54,36.83,36.86,40.18,45.62,44.58,46.03]))
# MER
bkgSys_2016_MER = dict(zip(masses,[0.08,0.09,0.17,0.11,0.24,0.27,0.34,0.5,0.97,0.77,0.7,1.14,1.81,1.2,1.48,2.55,3.59,2.4,7.64,0.21,6.79,1.0,1.1,7.38,0.14,1.73,1.5,2.53]))
bkgSys_2017_MER = dict(zip(masses,[0.09,0.1,0.17,0.25,0.22,0.55,0.36,0.23,0.41,0.86,0.79,0.93,1.16,2.23,2.11,2.54,1.62,1.58,12.62,4.85,2.52,3.02,1.64,3.27,5.64,0.85,2.52,7.54]))
bkgSys_2018_MER = dict(zip(masses,[0.27,0.27,0.19,0.15,0.19,0.4,0.66,0.46,0.54,0.94,1.5,1.3,1.01,2.21,2.09,3.04,3.81,2.07,4.46,4.29,4.18,1.86,6.02,7.29,12.29,3.14,1.24,2.51]))
# MUONRECO
bkgSys_2016_MUONRECO = dict(zip(masses,[0.16,0.16,0.17,0.2,0.24,0.29,0.34,0.39,0.46,0.54,0.63,0.73,0.83,0.95,1.17,1.41,1.67,1.96,2.24,2.73,3.16,3.75,4.41,6.66,7.17,11.09,12.28,16.1]))
bkgSys_2017_MUONRECO = dict(zip(masses,[0.1,0.1,0.11,0.13,0.15,0.18,0.21,0.25,0.28,0.32,0.36,0.41,0.46,0.52,0.38,0.42,0.44,0.49,0.52,0.61,0.65,0.71,0.71,0.8,0.91,1.09,1.14,1.16]))
bkgSys_2018_MUONRECO = dict(zip(masses,[0.08,0.08,0.09,0.1,0.12,0.14,0.16,0.19,0.21,0.24,0.26,0.29,0.31,0.32,0.34,0.37,0.41,0.42,0.47,0.62,0.69,0.7,0.52,0.58,0.63,0.73,0.74,0.74]))
# PDF
bkgSys_2016_PDF = dict(zip(masses,[2.25,2.25,2.34,2.53,2.83,3.17,3.57,3.95,4.44,4.77,5.01,5.55,5.82,6.34,6.51,6.81,6.84,7.06,7.63,6.13,5.81,6.49,6.91,7.28,6.67,6.11,6.56,6.64]))
bkgSys_2017_PDF = dict(zip(masses,[2.71,2.72,2.94,3.42,4.11,4.75,5.44,6.13,6.72,7.32,7.85,8.47,8.88,9.49,9.95,10.64,10.51,10.67,11.07,11.34,11.67,12.14,12.67,12.65,12.16,11.83,11.41,11.88]))
bkgSys_2018_PDF = dict(zip(masses,[2.83,2.84,3.07,3.57,4.2,4.82,5.4,6.03,6.59,7.14,7.73,8.33,9.02,10.07,10.35,10.33,10.56,11.46,11.36,11.85,12.06,12.53,12.27,11.9,12.16,12.72,12.73,12.83]))
# TOPPT
bkgSys_2016_TOPPT = dict(zip(masses,[1.38,1.39,1.47,1.57,1.64,1.64,1.65,1.62,1.62,1.57,1.56,1.53,1.51,1.47,1.39,1.32,1.2,1.3,1.27,1.59,1.7,1.61,1.66,1.39,1.23,0.69,0.74,0.16]))
bkgSys_2017_TOPPT = dict(zip(masses,[1.76,1.77,1.91,2.09,2.22,2.3,2.34,2.35,2.37,2.37,2.35,2.33,2.22,2.19,2.19,2.17,2.23,2.13,1.83,2.11,2.17,2.11,1.97,1.96,2.3,2.22,2.22,2.21]))
bkgSys_2018_TOPPT = dict(zip(masses,[1.7,1.71,1.84,2.01,2.14,2.19,2.2,2.25,2.27,2.27,2.36,2.36,2.39,2.56,2.52,2.5,2.67,2.69,2.66,2.88,2.87,2.44,2.53,2.4,2.72,2.34,2.25,2.22]))
# Total
bkgSys_2016_Total = dict(zip(masses,[3.63,3.62,3.74,4.46,5.37,6.4,7.37,8.59,10.14,11.5,11.93,12.33,14.15,15.03,14.69,16.56,19.18,20.82,26.33,26.15,28.75,38.14,41.09,43.29,46.36,47.1,51.06,54.72]))
bkgSys_2017_Total = dict(zip(masses,[4.94,4.97,5.2,5.6,6.11,7.21,8.72,10.15,11.33,12.76,14.17,14.18,14.91,17.39,17.26,20.45,20.77,24.17,33.73,30.81,34.52,43.58,44.52,45.03,45.95,46.58,49.63,54.31]))
bkgSys_2018_Total = dict(zip(masses,[4.15,4.18,4.36,4.72,5.33,6.46,7.89,9.63,10.77,11.95,13.55,14.56,16.3,17.61,18.76,20.42,23.24,24.9,29.29,31.32,33.4,41.53,43.87,44.73,53.01,59.58,50.93,52.4]))
# VVNORM
bkgSys_2016_VVNORM = dict(zip(masses,[0.2,0.2,0.21,0.24,0.29,0.32,0.38,0.43,0.49,0.54,0.57,0.61,0.58,0.51,0.6,0.62,0.62,0.72,0.72,0.88,0.96,0.6,0.67,0.89,1.18,1.83,2.14,2.76]))
bkgSys_2017_VVNORM = dict(zip(masses,[0.2,0.2,0.21,0.24,0.27,0.31,0.36,0.42,0.51,0.62,0.77,0.8,0.95,1.08,0.91,1.02,1.17,1.24,1.26,0.78,0.92,1.0,1.03,1.26,1.28,1.25,1.47,1.1]))
bkgSys_2018_VVNORM = dict(zip(masses,[0.21,0.21,0.22,0.24,0.29,0.36,0.4,0.43,0.47,0.43,0.43,0.46,0.5,0.55,0.77,0.88,0.85,0.97,1.17,0.77,0.86,1.18,1.35,1.66,1.22,0.93,0.88,0.94]))
# SHAPEZ
bkgSys_2016_SHAPEZ = dict(zip(masses,[0.24,0.24,0.2,0.34,0.43,0.39,0.33,0.41,0.8,0.61,0.74,0.9,1.05,1.17,1.42,1.47,1.81,2.16,1.76,1.71,2.07,1.93,3.92,3.45,4.38,6.54,5.85,9.92]))
bkgSys_2017_SHAPEZ = dict(zip(masses,[0.2,0.21,0.22,0.32,0.32,0.37,0.24,0.33,0.46,0.63,0.98,1.1,0.84,1.0,1.28,1.75,2.15,2.73,2.64,2.14,1.96,2.91,1.97,2.91,2.54,1.72,2.69,2.17]))
bkgSys_2018_SHAPEZ = dict(zip(masses,[0.22,0.22,0.23,0.21,0.27,0.31,0.42,0.39,0.53,0.54,0.75,0.9,0.9,0.95,1.06,1.43,1.65,1.31,1.41,2.05,2.44,2.7,3.1,3.41,3.68,4.84,4.92,5.93]))

sigSys_2016_param = dict(zip(masses,[2.54,2.53,2.64,2.81,3.02,3.33,3.74,4.26,5.02,5.8,6.97,8.32,9.72,11.63,13.9,15.89,18.55,21.1,23.98,27.03,29.32,32.22,34.95,37.7,40.23,42.86,45.5,47.8]))
bkgSys_2016_param = dict(zip(masses,[3.61,3.6,3.72,4.43,5.34,6.38,7.36,8.57,10.13,11.46,11.91,12.26,14.05,14.79,14.39,15.41,16.19,17.12,17.72,19.09,20.25,20.93,22.84,23.56,24.64,28.57,28.59,35.88]))

sigSys_2017_param = dict(zip(masses,[4.04,3.54,3.46,3.49,3.56,3.64,3.77,3.91,4.08,4.28,4.55,4.88,5.26,5.7,6.19,6.85,7.45,8.18,8.88,9.64,10.3,11.0,11.72,12.46,13.15,13.7,14.4,14.91]))
bkgSys_2017_param = dict(zip(masses,[4.94,4.97,5.19,5.6,6.1,7.21,8.71,10.15,11.32,12.74,14.15,14.13,14.83,17.2,17.01,19.55,20.14,21.48,23.04,23.47,24.86,26.28,28.01,29.91,31.18,32.48,34.4,34.83]))

sigSys_2018_param = dict(zip(masses,[3.07,2.88,2.92,3.07,3.27,3.55,3.88,4.28,4.71,5.26,5.81,6.43,7.03,7.74,8.56,9.27,10.03,10.8,11.69,12.44,13.18,13.88,14.62,15.3,15.97,16.59,17.23,17.86]))
bkgSys_2018_param = dict(zip(masses,[4.17,4.2,4.38,4.73,5.35,6.48,7.9,9.64,10.77,11.94,13.54,14.52,16.23,17.43,18.53,19.52,20.86,21.72,22.86,24.55,25.23,26.02,27.09,28.17,29.9,31.21,32.5,33.77]))


allSysNames = ["JER","JES","MUONISO","BTAG","PU","SHAPEVV","LUMI","PREFIRE","MUONID","MUONHLT","SHAPETT","TTNORM","ZNORM","MES","MER","MUONRECO","PDF","TOPPT","Total","VVNORM","SHAPEZ"]

all_2016 = dict(zip(allSysNames,[bkgSys_2016_JER, bkgSys_2016_JES, bkgSys_2016_MUONISO, bkgSys_2016_BTAG, bkgSys_2016_PU, bkgSys_2016_SHAPEVV, bkgSys_2016_LUMI, bkgSys_2016_PREFIRE, bkgSys_2016_MUONID, bkgSys_2016_MUONHLT, bkgSys_2016_SHAPETT, bkgSys_2016_TTNORM, bkgSys_2016_ZNORM, bkgSys_2016_MES, bkgSys_2016_MER, bkgSys_2016_MUONRECO, bkgSys_2016_PDF, bkgSys_2016_TOPPT, bkgSys_2016_Total, bkgSys_2016_VVNORM, bkgSys_2016_SHAPEZ]))
all_2017 = dict(zip(allSysNames,[bkgSys_2017_JER, bkgSys_2017_JES, bkgSys_2017_MUONISO, bkgSys_2017_BTAG, bkgSys_2017_PU, bkgSys_2017_SHAPEVV, bkgSys_2017_LUMI, bkgSys_2017_PREFIRE, bkgSys_2017_MUONID, bkgSys_2017_MUONHLT, bkgSys_2017_SHAPETT, bkgSys_2017_TTNORM, bkgSys_2017_ZNORM, bkgSys_2017_MES, bkgSys_2017_MER, bkgSys_2017_MUONRECO, bkgSys_2017_PDF, bkgSys_2017_TOPPT, bkgSys_2017_Total, bkgSys_2017_VVNORM, bkgSys_2017_SHAPEZ]))
all_2018 = dict(zip(allSysNames,[bkgSys_2018_JER, bkgSys_2018_JES, bkgSys_2018_MUONISO, bkgSys_2018_BTAG, bkgSys_2018_PU, bkgSys_2018_SHAPEVV, bkgSys_2018_LUMI, bkgSys_2018_PREFIRE, bkgSys_2018_MUONID, bkgSys_2018_MUONHLT, bkgSys_2018_SHAPETT, bkgSys_2018_TTNORM, bkgSys_2018_ZNORM, bkgSys_2018_MES, bkgSys_2018_MER, bkgSys_2018_MUONRECO, bkgSys_2018_PDF, bkgSys_2018_TOPPT, bkgSys_2018_Total, bkgSys_2018_VVNORM, bkgSys_2018_SHAPEZ]))

# Get the x points
x_fit = np.array([1000, 1500, 1800])
x_all = np.array([float(m) for m in masses])
xLine = np.arange(1000,3000,0.1)

# Get the y points
y_fit_2016 = np.array([bkgSys_2016["1000"],bkgSys_2016["1500"],bkgSys_2016["1800"]])
y_fit_2017 = np.array([bkgSys_2017["1000"],bkgSys_2017["1500"],bkgSys_2017["1800"]])
y_fit_2018 = np.array([bkgSys_2018["1000"],bkgSys_2018["1500"],bkgSys_2018["1800"]])
#
#y_all_2016 = np.array([BkgSysts2016[mass] for mass in masses])
#y_all_2017 = np.array([BkgSysts2017[mass] for mass in masses])
#y_all_2018 = np.array([BkgSysts2018[mass] for mass in masses])
#
## Do the fits here
coeff_2016 = np.polyfit(x_fit,y_fit_2016,1)
fitFunction_2016 = np.poly1d(coeff_2016)
#
coeff_2017 = np.polyfit(x_fit,y_fit_2017,1)
fitFunction_2017 = np.poly1d(coeff_2017)
#
coeff_2018 = np.polyfit(x_fit,y_fit_2018,1)
fitFunction_2018 = np.poly1d(coeff_2018)
#
#print "2016 function: " + str(coeff_2016[0]) + "x + " + str(coeff_2016[1])
#print "2017 function: " + str(coeff_2017[0]) + "x + " + str(coeff_2017[1])
#print "2018 function: " + str(coeff_2018[0]) + "x + " + str(coeff_2018[1])

# Do the plotting here

#os.system('mkdir SysStabilityStudy')

#for sys in allSysNames:
#    fig = plt.figure()
#    fig, ax = plt.subplots()
#
#    y_all_2016 = np.array([all_2016[sys][mass] for mass in masses])
#    y_all_2017 = np.array([all_2017[sys][mass] for mass in masses])
#    y_all_2018 = np.array([all_2018[sys][mass] for mass in masses])
#
#    y_all_2016_1800 = all_2016[sys]["1800"]
#    y_all_2017_1800 = all_2017[sys]["1800"]
#    y_all_2018_1800 = all_2018[sys]["1800"]
#
#    #ax.plot(xLine, fitFunction_2016(xLine), linestyle='--', color='lightseagreen', label='2016 linear fit')
#    #ax.plot(xLine, fitFunction_2017(xLine), linestyle='--', color='mediumblue', label='2017 linear fit')
#    #ax.plot(xLine, fitFunction_2018(xLine), linestyle='--', color='crimson', label='2018 linear fit')
#
#    ax.scatter(x_all, y_all_2016, marker='.', color='lightseagreen', label='2016')
#    ax.scatter(x_all, y_all_2017, marker='.', color='mediumblue', label='2017')
#    ax.scatter(x_all, y_all_2018, marker='.', color='crimson', label='2018')
#
#    ax.scatter(1800, y_all_2016_1800, marker='o', color='lightseagreen')
#    ax.scatter(1800, y_all_2017_1800, marker='o', color='mediumblue')
#    ax.scatter(1800, y_all_2018_1800, marker='o', color='crimson')
#
#    ax.legend(title='Background '+sys)
#
#    ax.set_ylabel('systematic uncertainty [%]')
#    ax.set_xlabel('leptoquark mass [GeV]')
#    plt.savefig("SysStabilityStudy/sysFitStudy_"+sys+".pdf", format="pdf", bbox_inches="tight")

fig = plt.figure()
fig, ax = plt.subplots()

y_sigSys_2016 = np.array([sigSys_2016[mass] for mass in masses])
y_bkgSys_2016 = np.array([bkgSys_2016[mass] for mass in masses])

y_sigSys_2016_param = np.array([sigSys_2016_param[mass] for mass in masses])
y_bkgSys_2016_param = np.array([bkgSys_2016_param[mass] for mass in masses])

y_sigSys_2017 = np.array([sigSys_2017[mass] for mass in masses])
y_bkgSys_2017 = np.array([bkgSys_2017[mass] for mass in masses])

y_sigSys_2017_param = np.array([sigSys_2017_param[mass] for mass in masses])
y_bkgSys_2017_param = np.array([bkgSys_2017_param[mass] for mass in masses])

y_sigSys_2018 = np.array([sigSys_2018[mass] for mass in masses])
y_bkgSys_2018 = np.array([bkgSys_2018[mass] for mass in masses])

y_sigSys_2018_param = np.array([sigSys_2018_param[mass] for mass in masses])
y_bkgSys_2018_param = np.array([bkgSys_2018_param[mass] for mass in masses])


#y_all_2016_1800 = all_2016[sys]["1800"]
#y_all_2017_1800 = all_2017[sys]["1800"]
#y_all_2018_1800 = all_2018[sys]["1800"]

ax.plot(xLine, fitFunction_2016(xLine), linestyle='--', color='lightseagreen', label='2016 linear fit')
ax.plot(xLine, fitFunction_2017(xLine), linestyle='--', color='mediumblue', label='2017 linear fit')
ax.plot(xLine, fitFunction_2018(xLine), linestyle='--', color='crimson', label='2018 linear fit')

#ax.scatter(x_all, y_sigSys_2016, marker='.', color='lightseagreen', label='2016')
ax.scatter(x_all, y_bkgSys_2016, marker='.', color='lightseagreen', label='2016')
ax.scatter(x_all, y_bkgSys_2017, marker='.', color='mediumblue', label='2017')
ax.scatter(x_all, y_bkgSys_2018, marker='.', color='crimson', label='2018')

#ax.scatter(1800, y_all_2016_1800, marker='o', color='lightseagreen')
#ax.scatter(1800, y_all_2017_1800, marker='o', color='mediumblue')
#ax.scatter(1800, y_all_2018_1800, marker='o', color='crimson')

#ax.scatter(x_all, y_sigSys_2016_param, marker='o', color='lightseagreen', label='2016 parameterized')
ax.scatter(x_all, y_bkgSys_2016_param, marker='o', color='lightseagreen', label='2016 parameterized')
ax.scatter(x_all, y_bkgSys_2017_param, marker='o', color='mediumblue', label='2017 parameterized')
ax.scatter(x_all, y_bkgSys_2018_param, marker='o', color='crimson', label='2018 parameterized')

ax.legend(title='Background systematics')
ax.set_ylabel('Total systematic uncertainty [%]')
ax.set_xlabel('leptoquark mass [GeV]')
plt.savefig("SysStabilityStudy/sysFitStudyCheck.pdf", format="pdf", bbox_inches="tight")